Token          Line #  Column #  Lexeme                                       
MP_PROGRAM     1       1         program
MP_IDENTIFIER  1       9         Program4
MP_SCOLON      1       17        ;
MP_VAR         2       3         var
MP_IDENTIFIER  2       7         Sum
MP_COMMA       2       10        ,
MP_IDENTIFIER  2       12        I
MP_COMMA       2       13        ,
MP_IDENTIFIER  2       15        N
MP_COLON       2       17        :
MP_INTEGER_LIT 2       19        Integer
MP_SCOLON      2       26        ;
MP_BEGIN       3       3         begin
MP_READ        4       6         Read
MP_LPAREN      4       10        (
MP_IDENTIFIER  4       11        N
MP_RPAREN      4       12        )
MP_SCOLON      4       13        ;
MP_IDENTIFIER  5       6         I
MP_ASSIGN      5       10        :=
MP_INTEGER_LIT 5       13        0
MP_SCOLON      5       14        ;
MP_IDENTIFIER  6       6         Sum
MP_ASSIGN      6       10        :=
MP_INTEGER_LIT 6       13        0
MP_SCOLON      6       14        ;
MP_REPEAT      7       6         repeat
MP_IDENTIFIER  8       8         Sum
MP_ASSIGN      8       12        :=
MP_IDENTIFIER  8       15        Sum
MP_PLUS        8       19        +
MP_IDENTIFIER  8       21        I
MP_SCOLON      8       22        ;
MP_IDENTIFIER  9       8         I
MP_ASSIGN      9       12        :=
MP_IDENTIFIER  9       15        I
MP_PLUS        9       17        +
MP_INTEGER_LIT 9       19        1
MP_SCOLON      9       20        ;
MP_WRITE       10      8         Write
MP_LPAREN      10      13        (
MP_IDENTIFIER  10      14        I
MP_COMMA       10      15        ,
MP_IDENTIFIER  10      17        Sum
MP_RPAREN      10      20        )
MP_SCOLON      10      21        ;
MP_UNTIL       11      6         until
MP_LPAREN      11      12        (
MP_IDENTIFIER  11      13        I
MP_GTHAN       11      15        >
MP_IDENTIFIER  11      17        N
MP_RPAREN      11      18        )
MP_AND         11      20        and
MP_LPAREN      11      24        (
MP_IDENTIFIER  11      25        I
MP_LEQUAL      11      27        <=
MP_INTEGER_LIT 11      30        100
MP_RPAREN      11      33        )
MP_END         12      4         end
MP_PERIOD      12      7         .
MP_EOF         12      8         ÿ                                            

